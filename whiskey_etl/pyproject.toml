[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "whiskey-etl"
version = "0.1.0"
description = "ETL extension for Whiskey dependency injection framework"
authors = [{name = "Whiskey ETL Contributors"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Software Distribution",
]
keywords = ["dependency-injection", "etl", "data-pipeline", "whiskey"]

dependencies = [
    "whiskey>=0.1.0",
    "whiskey-sql>=0.1.0",
]

[tool.uv.sources]
whiskey = { workspace = true }
whiskey-sql = { workspace = true }

[project.optional-dependencies]
# Object store dependencies
s3 = ["aioboto3>=11.0.0"]
azure = ["azure-storage-blob>=12.0.0"]
gcs = ["google-cloud-storage>=2.0.0"]
# All cloud storage
cloud = ["aioboto3>=11.0.0", "azure-storage-blob>=12.0.0", "google-cloud-storage>=2.0.0"]
# Data format dependencies
parquet = ["pyarrow>=10.0.0"]
compression = ["python-snappy>=0.6.0"]
# Other optional dependencies
pandas = ["pandas>=1.0.0"]
polars = ["polars>=0.19.0"]
sqlalchemy = ["sqlalchemy>=2.0.0"]
# Development dependencies
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/your-org/whiskey"
Repository = "https://github.com/your-org/whiskey"
Documentation = "https://whiskey.readthedocs.io"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
whiskey_etl = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true